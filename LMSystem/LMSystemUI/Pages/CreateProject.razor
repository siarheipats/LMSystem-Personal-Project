@page "/new_project"

@using LMSystemUI.Models
@inject IMongoProjectData projectData
@inject NavigationManager navManager
@inject IMongoUserData userData

@inject IToastService toastService

<h3>Create New Project:</h3>
<br />
<div>
    <div>
        <div>
            <EditForm Model="project" OnValidSubmit="CreateNewProject">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <table class="invoice-items-table">
                    <tbody>
                        <tr>
                            <td>Title:</td>
                            <td><InputText id="project-title-text" @bind-Value="project.ProjectTitle" /></td>
                        </tr>
                        <tr>
                            <td>Description:</td>
                            <td><InputTextArea id="project-desription-text" rows="3" cols="21" @bind-Value="project.ProjectDescription" /></td>
                        </tr>
                        <tr>
                            <td>Notes:</td>
                            <td><InputTextArea id="project-notes-text" rows="3" cols="21" @bind-Value="project.ProjectNotes" /></td>
                        </tr>
                        <tr>
                            <td>Status:</td>
                            <td><InputText id="project-status-text" @bind-Value="project.ProjectStatus" /></td>
                        </tr>
                        <tr>
                            <td>   </td>
                            <td><button class="btn btn-primary" type="submit">Create New Project</button></td>
                        </tr>
                    </tbody>
                </table>
            </EditForm>
        </div>
    </div>
</div>

@code {
    private CreateProjectModel project = new();
    private ProjectModel createdProject = new();
    private UserModel currentUser = new();
    
    private async Task CreateNewProject()
    {
        ProjectModel s = new();

        toastService.ShowSuccess($"{project.ProjectTitle} was succesfully created!");

        //TODO: Replace with User lookup once login implemented
        currentUser = await userData.GeUserAsync("6261c24911695f79f40683c3");

        s.ProjectTitle = project.ProjectTitle;
        s.ProjectDescription = project.ProjectDescription;
        s.ProjectNotes = project.ProjectNotes;
        s.ProjectClient = new();
        s.Invoices = new();
        s.CreatedBy = currentUser;
        s.ProjectStatus = project.ProjectStatus;

        await projectData.CreateProject(s);
        project = new();
        ClosePage();
    }

    private void ClosePage()
    {
        navManager.NavigateTo("/projects");
    }
}

