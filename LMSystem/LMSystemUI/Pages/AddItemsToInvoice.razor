@page "/additemstoinvoice/{id}"

@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject IMongoInvoiceData invoiceData
@inject IMongoItemData itemData
@inject NavigationManager navManager
@inject ProtectedSessionStorage sessionStorage

@inject IToastService toastService

<h1 class="page-heading text-uppercase mb-4">Add items to @invoice.InvoiceTitle:</h1>

<button @onclick="(() => ClosePage())">Close Items Page</button>
<br />
<div>
    <h4>Select Items To Add:</h4>
    <div class="description-and-search-bar">
        <input type="text" placeholder="Search for the Items To Add"
               aria-label="Search box"
               @oninput="((txt) => OnSearchInput((string)txt.Value))" />
    </div>
    <div class="result-card">
        @if (items is not null)
        {
        <div class="table">
            <table class="invoice-items-table-wide">
                <thead class="table-header">
                    <tr>
                        <th>Name</th>
                        <th>Description</th>
                        <th>Price</th>
                        <th>Quantity In Stock</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    <Virtualize Items="@items" Context="s" OverscanCount="10">
                        <tr>
                            <td>@s.ItemName</td>
                            <td>@s.ItemDescription</td>
                            <td>@s.Price</td>
                            @if (s.QuantityInStock > 0)
                            {
                                <td>@s.QuantityInStock</td>
                            }
                            @if (s.QuantityInStock == 0)
                            {
                                <td>Out Of Stock</td>
                            }
                            <td>
                                <button class="btn btn-success" @onclick="@(() => { AddItem(s); toastService.ShowSuccess($"{s.ItemName} was added to {invoice.InvoiceTitle}."); })">Add Item</button>
                            </td>
                        </tr>
                    </Virtualize>
                </tbody>
            </table>
        </div>
        }
    </div>
</div>

@code {
    [Parameter]
    public string Id { get; set; }
    private InvoiceModel invoice = new();
    private List<ItemModel> items = new();
    private string searchText = "";

    protected override async Task OnInitializedAsync()
    {
        invoice = await invoiceData.GetInvoiceAsync(Id);
        items = await itemData.GetItemsAsync();
    }

    private void ClosePage()
    {
        navManager.NavigateTo($"/invoice/{invoice.Id}");
    }

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {

        if (firstRender)
        {
            await LoadFilterState();
            await FilterItems();
            StateHasChanged();
        }
    }

    private async Task LoadFilterState()
    {
        searchText = "";

    }

    private async Task FilterItems()
    {
        var output = await itemData.GetItemsAsync();
        if (string.IsNullOrWhiteSpace(searchText) == false)
        {
            output = output.Where(s => s.ItemName.Contains(searchText, StringComparison.InvariantCultureIgnoreCase) ||
            s.ItemDescription.Contains(searchText, StringComparison.InvariantCultureIgnoreCase)).ToList();
        }
        items = output;

        await SaveFilterState();
    }

    private async Task SaveFilterState()
    {
        await sessionStorage.SetAsync(nameof(searchText), searchText);
    }

    private async Task OnSearchInput(string searchInput)
    {
        searchText = searchInput;
        await FilterItems();
    }

    private async Task AddItem(ItemModel item)
    {
        invoice.Items.Add(item);
        var total = float.Parse(invoice.Total);
        var new_total = total + float.Parse(item.Price);
        invoice.Total = new_total.ToString();
        await invoiceData.UpdateInvoice(invoice);

    }

    private void ShowToast(ItemModel item)
    {
            toastService.ShowSuccess($"{item.ItemName} was succesfully added to {invoice.InvoiceTitle}");
    }

}

